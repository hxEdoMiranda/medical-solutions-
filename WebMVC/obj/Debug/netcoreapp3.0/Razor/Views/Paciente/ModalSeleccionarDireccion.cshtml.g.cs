#pragma checksum "D:\PRODUCTOBASE001-FULL\WebMVC\Views\Paciente\ModalSeleccionarDireccion.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "75f5813265553c36de0cd3076d3f2a953f249dce"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Paciente_ModalSeleccionarDireccion), @"mvc.1.0.view", @"/Views/Paciente/ModalSeleccionarDireccion.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\PRODUCTOBASE001-FULL\WebMVC\Views\_ViewImports.cshtml"
using WebMVC;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\PRODUCTOBASE001-FULL\WebMVC\Views\_ViewImports.cshtml"
using WebMVC.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"75f5813265553c36de0cd3076d3f2a953f249dce", @"/Views/Paciente/ModalSeleccionarDireccion.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"d07e873f05b36c9d83cd6a184d4bfbe1720fee4b", @"/Views/_ViewImports.cshtml")]
    #nullable restore
    public class Views_Paciente_ModalSeleccionarDireccion : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<WebMVC.Models.ModalDirecciones>
    #nullable disable
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 3 "D:\PRODUCTOBASE001-FULL\WebMVC\Views\Paciente\ModalSeleccionarDireccion.cshtml"
  
    string titulo = string.Empty;
    string porDefecto = string.Empty;

    if (Model.Type == "M")
    {
        titulo = "Selecciona la dirección para toma de Medicamentos";
        porDefecto = "Usar dirección para toma de Exámenes";
    }
    else if (Model.Type == "P")
    {
        titulo = "Selecciona la dirección para tu perfil";
        porDefecto = "Usar dirección para tu perfil";
    }
    else
    {
        titulo = "Selecciona la dirección de despacho para los Exámenes";
        porDefecto = "Usar dirección para despacho de Medicamentos";
    }

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<!-- Modal Map -->\r\n<div class=\"wow-modal-overlay\">\r\n    <div class=\"wow-modal wow-modal__container\">\r\n        <div class=\"wow-modal__header\">\r\n            <h1 class=\"title-Busca_Direccion\">\r\n                ");
#nullable restore
#line 29 "D:\PRODUCTOBASE001-FULL\WebMVC\Views\Paciente\ModalSeleccionarDireccion.cshtml"
           Write(titulo);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
            </h1>
            <button id=""btn-close-modal"" class=""close-modal_direccion"">
                <i class=""fal fa-times""></i>
            </button>
        </div>
        <div class=""wow-modal__body"">
            <div class=""cont-radio"">
");
#nullable restore
#line 37 "D:\PRODUCTOBASE001-FULL\WebMVC\Views\Paciente\ModalSeleccionarDireccion.cshtml"
                 foreach (var item in Model.Addresses.Take(3))
                {

#line default
#line hidden
#nullable disable
            WriteLiteral("                    <label");
            BeginWriteAttribute("for", " for=\"", 1212, "\"", 1232, 2);
            WriteAttributeValue("", 1218, "radio-", 1218, 6, true);
#nullable restore
#line 39 "D:\PRODUCTOBASE001-FULL\WebMVC\Views\Paciente\ModalSeleccionarDireccion.cshtml"
WriteAttributeValue("", 1224, item.Id, 1224, 8, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(" class=\"wow__label-radio\">\r\n                        <input");
            BeginWriteAttribute("id", " id=\"", 1291, "\"", 1310, 2);
            WriteAttributeValue("", 1296, "radio-", 1296, 6, true);
#nullable restore
#line 40 "D:\PRODUCTOBASE001-FULL\WebMVC\Views\Paciente\ModalSeleccionarDireccion.cshtml"
WriteAttributeValue("", 1302, item.Id, 1302, 8, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(" type=\"radio\" name=\"direccion\"");
            BeginWriteAttribute("value", " value=\"", 1341, "\"", 1357, 1);
#nullable restore
#line 40 "D:\PRODUCTOBASE001-FULL\WebMVC\Views\Paciente\ModalSeleccionarDireccion.cshtml"
WriteAttributeValue("", 1349, item.Id, 1349, 8, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            BeginWriteAttribute("checked", " checked=\"", 1358, "\"", 1498, 1);
#nullable restore
#line 40 "D:\PRODUCTOBASE001-FULL\WebMVC\Views\Paciente\ModalSeleccionarDireccion.cshtml"
WriteAttributeValue("", 1368, (Model.Type == "E" && item.PorDefectoExamenes) || (Model.Type == "M" && item.PorDefectoMedicamentos) || (item.PorDefectoPerfil), 1368, 130, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(">\r\n                        ");
#nullable restore
#line 41 "D:\PRODUCTOBASE001-FULL\WebMVC\Views\Paciente\ModalSeleccionarDireccion.cshtml"
                   Write(item.Direccion);

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                    </label>\r\n                    <button id=\"delete-address-btn\" type=\"button\" class=\"wow__btn_danger btn-eliminar-direccion\" data-id-direccion=\"");
#nullable restore
#line 43 "D:\PRODUCTOBASE001-FULL\WebMVC\Views\Paciente\ModalSeleccionarDireccion.cshtml"
                                                                                                                               Write(item.Id);

#line default
#line hidden
#nullable disable
            WriteLiteral("\" ");
#nullable restore
#line 43 "D:\PRODUCTOBASE001-FULL\WebMVC\Views\Paciente\ModalSeleccionarDireccion.cshtml"
                                                                                                                                          Write(item.PorDefectoPerfil ? "hidden" : "");

#line default
#line hidden
#nullable disable
            WriteLiteral(">\r\n                        <i class=\"fas fa-trash-alt\"></i>\r\n                    </button>\r\n                    <br />\r\n");
#nullable restore
#line 47 "D:\PRODUCTOBASE001-FULL\WebMVC\Views\Paciente\ModalSeleccionarDireccion.cshtml"
                }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"            </div>
            <div id=""error-no-seleccion"" style=""display: none; color: red;"">Debe seleccionar una dirección</div>
            <div class=""map-container"">
                <div id=""map""></div>
            </div>
        </div>

        <div class=""wow-modal__footer"">
            <div id=""check-direccion"" class=""modal-checker_direccion"">
                <input type=""checkbox""");
            BeginWriteAttribute("name", " name=\"", 2296, "\"", 2303, 0);
            EndWriteAttribute();
            WriteLiteral(" id=\"check-dir-ambos\">\r\n                <label style=\"vertical-align: middle;\" for=\"check-dir-ambos\">");
#nullable restore
#line 58 "D:\PRODUCTOBASE001-FULL\WebMVC\Views\Paciente\ModalSeleccionarDireccion.cshtml"
                                                                        Write(porDefecto);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"</label>
            </div>

            <button id=""seleccionar-direccion"" class=""btn btn-primary btn-guardar_direccion"">
                Seleccionar Dirección
            </button>
        </div>

    </div>
</div>
<!-- end::Modal Map -->
<!-- start::Modal Script -->
<script type=""text/javascript"">
    (function () {
        const data = ");
#nullable restore
#line 72 "D:\PRODUCTOBASE001-FULL\WebMVC\Views\Paciente\ModalSeleccionarDireccion.cshtml"
                Write(Html.Raw(Json.Serialize(Model)));

#line default
#line hidden
#nullable disable
            WriteLiteral(";\r\n        var map;\r\n        var marker;\r\n        if (window.contieneExamenes == 0 || window.contieneMedicamentos == 0 || \"");
#nullable restore
#line 75 "D:\PRODUCTOBASE001-FULL\WebMVC\Views\Paciente\ModalSeleccionarDireccion.cshtml"
                                                                            Write(Model.Type);

#line default
#line hidden
#nullable disable
            WriteLiteral(@""" === ""P"") {
            $(""#check-direccion"").css(""visibility"", ""hidden"");
        }
        $(""#btn-close-modal"").off().click(function (e) {
            $(""#dynamic-modal-div"").modal(""hide"");
        });

        $(""input[type=radio][name=direccion]"").off().change(function () {
            $(""#error-no-seleccion"").hide(""fast"");
            const value = $(this).val() ?? """";

            if (value != """") {
                const item = data.addresses.find(el => el.id === parseInt(value));
                const location = { lat: parseFloat(item.latitud), lng: parseFloat(item.longitud) };
                map.setCenter(location);
                map.setZoom(17);
                marker = new google.maps.Marker({
                    position: location,
                    map: map
                });
            }
        });

        $(""#seleccionar-direccion"").off().click(async function (e) {
            e.preventDefault();
            let value = $(""input[type=radio][name=direccion]:che");
            WriteLiteral(@"cked"").val() ?? """";
            $(""#error-no-seleccion"").hide(""fast"");

            if (value !== """") {
                seleccionarDireccion(value, data)
                var inputType = ""medicamentos"";
                if (data.type == ""E"")
                    inputType = ""examenes"";

                const button = document.getElementById(""agregar-direccion-"" + inputType);
                button.setAttribute(""iddireccion"", value);

                if (data.type == ""P"") {
                    const item = data.addresses.find(el => el.id === parseInt(value));
                    item.porDefectoPerfil = true;
                    //const addressProfile = $(""#profileAddress"");
                    //addressProfile.val(item.direccion);
                    const responsePersona = await fetch(`${window.baseUrl}/usuarios/personas/updateProfileAddress`, {
                        method: ""POST"",
                        headers: {
                            ""Accept"": ""application/json"",
               ");
            WriteLiteral(@"             ""Content-Type"": ""application/json""
                        },
                        body: JSON.stringify(item)
                    });
                    if (responsePersona.ok) {
                        const item = data.addresses.find(el => el.id === parseInt(value));
                        const responsePerfil = await fetch(`${window.baseUrl}/usuarios/personas/porDefectoPerfilAddress`, {
                            method: ""POST"",
                            headers: {
                                ""Accept"": ""application/json"",
                                ""Content-Type"": ""application/json""
                            },
                            body: JSON.stringify(item)
                        });
                        $(""#profileAddress"").val(item.direccion);
                    }
                    else if (!responsePersona.ok) {
                        Swal.fire(""¡Ups! Algo salió mal."", ""La dirección no se guardó en la tabla personas, por favor, inténtalo n");
            WriteLiteral(@"uevamente"", ""error"");
                        console.error(responsePersona)
                        return;
                    }
                }
            }

            else
                $(""#error-no-seleccion"").show(""fast"");
        });

        // Attach your callback function to the `window` object
        delete window.initMap;
        window.initMap = function () {
            let centroMapa;
            let codigoTelefonoPaciente = """);
#nullable restore
#line 153 "D:\PRODUCTOBASE001-FULL\WebMVC\Views\Paciente\ModalSeleccionarDireccion.cshtml"
                                     Write(Model.Patient.CodigoTelefono);

#line default
#line hidden
#nullable disable
            WriteLiteral(@""";

            if (codigoTelefonoPaciente === ""MX"") {
                centroMapa = { lat: 19.4326, lng: -99.1332 }; // Coordenadas para Ciudad de México, México
            } else if (codigoTelefonoPaciente === ""CL"") {
                centroMapa = { lat: -33.4489, lng: -70.6693 }; // Coordenadas para Santiago, Chile
            } else {
                centroMapa = { lat: -33.4489, lng: -70.6693 }; // Centro por defecto (Santiago, Chile)
            }

            // JS API is loaded and available
            map = new google.maps.Map(document.getElementById(""map""), {
                center: centroMapa,
                zoom: 12,
            });
        };

        const seleccionarDireccion = function (id, data) {
            const paciente = ");
#nullable restore
#line 171 "D:\PRODUCTOBASE001-FULL\WebMVC\Views\Paciente\ModalSeleccionarDireccion.cshtml"
                        Write(Html.Raw(Json.Serialize(Model.Patient)));

#line default
#line hidden
#nullable disable
            WriteLiteral(@";
            const item = data.addresses.find(el => el.id === parseInt(id));

            const billing_address = {
                customer_delivery_address_id: item.id,
                region: item.nombreRegion,
                region_id: parseInt(item.idRegion),
                region_code: item.codigoRegion,
                country_id: item.codigoPais,
                street: [
                    item.calle,
                    item.numero,
                    item.departamento,
                    item.referencia
                ],
                telephone: paciente.telefonoMovil,
                postcode: item.codigoPostal,
                city: item.nombreCiudad,
                firstname: paciente.nombre,
                lastname: paciente.apellidoPaterno,
                customer_id: data.userId,
                email: paciente.correo,
                same_as_billing: 0,
                save_in_address_book: 0
            }

            var check = $(""#check-dir-ambos"").p");
            WriteLiteral("rop(\"checked\");\r\n\r\n            if (\"");
#nullable restore
#line 199 "D:\PRODUCTOBASE001-FULL\WebMVC\Views\Paciente\ModalSeleccionarDireccion.cshtml"
            Write(Model.Type);

#line default
#line hidden
#nullable disable
            WriteLiteral("\" === \"M\") {\r\n\r\n                window.billing_address = billing_address;\r\n\r\n                const id = \"");
#nullable restore
#line 203 "D:\PRODUCTOBASE001-FULL\WebMVC\Views\Paciente\ModalSeleccionarDireccion.cshtml"
                       Write(Model.Type);

#line default
#line hidden
#nullable disable
            WriteLiteral(@""" === ""E"" ? ""#agregar-direccion-examenes"" : ""#agregar-direccion-medicamentos"";
                $(id).html(item.direccion);
                if (check) {
                    var idEx = ""#agregar-direccion-examenes"";
                    window.billing_addressEx = billing_address;
                    $(idEx).html(item.direccion);
                    const button = document.getElementById(""agregar-direccion-examenes"");
                    button.setAttribute(""iddireccion"", item.id);
                }
            }

            if (""");
#nullable restore
#line 214 "D:\PRODUCTOBASE001-FULL\WebMVC\Views\Paciente\ModalSeleccionarDireccion.cshtml"
            Write(Model.Type);

#line default
#line hidden
#nullable disable
            WriteLiteral("\" === \"E\") {\r\n\r\n                window.billing_addressEx = billing_address;\r\n\r\n                const idEx = \"");
#nullable restore
#line 218 "D:\PRODUCTOBASE001-FULL\WebMVC\Views\Paciente\ModalSeleccionarDireccion.cshtml"
                         Write(Model.Type);

#line default
#line hidden
#nullable disable
            WriteLiteral(@""" === ""E"" ? ""#agregar-direccion-examenes"" : ""#agregar-direccion-medicamentos"";
                $(idEx).html(item.direccion);
                if (check) {
                    var id = ""#agregar-direccion-medicamentos"";
                    window.billing_address = billing_address;
                    $(id).html(item.direccion);
                    const button = document.getElementById(""agregar-direccion-medicamentos"");
                    button.setAttribute(""iddireccion"", item.id);
                }
            }

            $(""#dynamic-modal"").empty();
            $(""#dynamic-modal-div"").modal(""hide"");
        }

        if (typeof google === ""undefined"") {
            // Create the script tag, set the appropriate attributes
            var script = document.createElement(""script"");
            script.src = ""https://maps.googleapis.com/maps/api/js?key=AIzaSyC9igtLSgxipwioIXKuCcKst89eZCF847o&libraries=places&callback=initMap"";
            script.async = true;

            // Append the """);
            WriteLiteral(@"script"" element to ""head""
            document.head.appendChild(script);
        } else {
            window.initMap();
        }

        const deleteAddress = async function (id) {

            const response = await fetch(`${window.baseUrl}/usuarios/personas/deleteAddress/${id}`, {
                method: ""POST"",
                headers: {
                    ""Accept"": ""application/json"",
                    ""Content-Type"": ""application/json""
                },
            });
            if (response.ok) {

                if (""");
#nullable restore
#line 256 "D:\PRODUCTOBASE001-FULL\WebMVC\Views\Paciente\ModalSeleccionarDireccion.cshtml"
                Write(Model.Type);

#line default
#line hidden
#nullable disable
            WriteLiteral(@""" === ""P"") {
                    const direccion = data.addresses.find(dir => dir.id === parseInt(id));
                    const responsePersona = await fetch(`${window.baseUrl}/usuarios/personas/deleteProfileAddress`, {
                        method: ""POST"",
                        headers: {
                            ""Accept"": ""application/json"",
                            ""Content-Type"": ""application/json""
                        },
                        body: JSON.stringify(direccion)
                    });
                    if (responsePersona.ok) {
                        const addressProfile = $(""#profileAddress"");
                        addressProfile.val(direccion.direccion);
                        return true;
                    }
                }
                return true;
            }
            return false;


        }

        //const deleteAddressBtn = document.getElementById(""delete-address-btn"");
        //deleteAddressBtn.addEventListener(""click"", a");
            WriteLiteral(@"sync () => {
        const deleteAddressBtns = document.querySelectorAll("".btn-eliminar-direccion"");
        deleteAddressBtns.forEach((btn) => {
            btn.addEventListener(""click"", async () => {
                // Obtener el id de la dirección a eliminar
                const idDireccion = btn.dataset.idDireccion;
                Swal.fire({
                    tittle: ""Eliminar dirección"",
                    text: ""La dirección seleccionada se va a eliminar, ¿deseas continuar?"",
                    type: ""warning"",
                    showCancelButton: true,
                    confirmButtonText: ""Aceptar"",
                    cancelButtonText: ""Cancelar""
                }).then((result) => {
                    if (result.value) {
                        // Llamar a la función deleteAddress
                        deleteAddress(idDireccion);
                        var cantDirecciones = $('.cont-radio label').length;
                        if (cantDirecciones < 2) {
             ");
            WriteLiteral(@"               $(""#seleccionar-direccion-examenes"").hide();
                            $(""#seleccionar-direccion-medicamentos"").hide();
                        }
                        document.querySelectorAll(""[iddireccion='"" + btn.dataset.idDireccion + ""']"").forEach(function (el) {

                            if (el.getAttribute(""class"") == ""agregarDireccionExamenes"")
                                window.billing_addressEx = undefined
                            else if (el.getAttribute(""class"") == ""agregar-direccion__medicamentos"")
                                window.billing_address = undefined
                            el.innerHTML = ""Agregar dirección"";
                        });

                        $(""#dynamic-modal-div"").modal(""hide"");
                    } else {
                        return;
                    }
                });
            });
        });
    })();

</script>

<script type=""text/javascript"">

</script>
<!-- end::Modal Script -->
");
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<WebMVC.Models.ModalDirecciones> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
